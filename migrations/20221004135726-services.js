'use strict'

var dbm
var type
var seed

/**
 * We receive the dbmigrate dependency from dbmigrate initially.
 * This enables us to not have to rely on NODE_PATH.
 */
exports.setup = function (options, seedLink) {
    dbm = options.dbmigrate
    type = dbm.dataType
    seed = seedLink
}

exports.up = function (db) {
    return db.runSql(`
CREATE TABLE public.services (
    id integer primary key generated by default as identity,
    listing_id int NOT NULL,
    provider_name varchar(10485760) NOT NULL,
    service_type varchar(10485760) NOT NULL,
    city varchar(10485760) NOT NULL,
    website varchar(10485760) NOT NULL,
    phone varchar(10485760) NOT NULL,
    price_level int NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT services_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT services_listing_id_uq UNIQUE (listing_id),
    CONSTRAINT services_listing_id_fk FOREIGN KEY (listing_id) REFERENCES public.listings(id)
);

CREATE TABLE public.categories (
    id integer primary key generated by default as identity,
    name varchar(10485760) NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT categories_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT categories_name_uq UNIQUE (name)
);

CREATE TABLE public.listing_features (
    id integer primary key generated by default as identity,
    name varchar(10485760) NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT listing_features_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT listing_features_name_uq UNIQUE (name)
);

CREATE TABLE public.review_types (
    id integer primary key generated by default as identity,
    name varchar(10485760) NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT review_types_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT review_types_name_uq UNIQUE (name)
);

CREATE TABLE public.review_has_types (
    id integer primary key generated by default as identity,
    review_id int NOT NULL,
    review_type_id int NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT review_has_types_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT review_has_types_review_type_id_review_id_uq UNIQUE (review_id, review_type_id),
    CONSTRAINT review_has_types_review_id_fk FOREIGN KEY (review_id) REFERENCES public.reviews(id),
    CONSTRAINT review_has_types_review_type_id_fk FOREIGN KEY (review_type_id) REFERENCES public.review_types(id)
);

CREATE TABLE public.service_types (
    id integer primary key generated by default as identity,
    name varchar(10485760) NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT service_types_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT service_types_name_uq UNIQUE (name)
);


CREATE TABLE public.listing_has_features (
    id integer primary key generated by default as identity,
    listing_id int NOT NULL,
    feature_id int NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT listing_has_features_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT listing_has_features_listing_id_feature_id_uq UNIQUE (listing_id, feature_id),
    CONSTRAINT listing_has_features_listing_id_fk FOREIGN KEY (listing_id) REFERENCES public.listings(id),
    CONSTRAINT listing_has_features_feature_id_fk FOREIGN KEY (feature_id) REFERENCES public.listing_features(id)
);

CREATE TABLE public.listing_has_photos (
    id integer primary key generated by default as identity,
    listing_id int NOT NULL,
    photo_id int NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT listing_has_photos_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT listing_has_photos_listing_id_photo_id_uq UNIQUE (listing_id, photo_id),
    CONSTRAINT listing_has_photos_listing_id_fk FOREIGN KEY (listing_id) REFERENCES public.listings(id),
    CONSTRAINT listing_has_photos_photo_id_fk FOREIGN KEY (photo_id) REFERENCES public.photos(id)
);

CREATE TABLE public.listing_has_categories (
    id integer primary key generated by default as identity,
    listing_id int NOT NULL,
    category_id int NOT NULL,
    created_at timestamp NOT NULL DEFAULT NOW(),
    updated_at timestamp NOT NULL DEFAULT NOW(),
    resource_id varchar(10485760) NOT NULL,
    CONSTRAINT listing_has_categories_resource_id_uq UNIQUE (resource_id),
    CONSTRAINT listing_has_categories_listing_id_category_id_uq UNIQUE (listing_id, category_id),
    CONSTRAINT listing_has_categories_listing_id_fk FOREIGN KEY (listing_id) REFERENCES public.listings(id),
    CONSTRAINT listing_has_categories_category_id_fk FOREIGN KEY (category_id) REFERENCES public.categories(id)
);

    `)
}

exports.down = function (db) {
    return null
}

exports._meta = {
    version: 1
}
